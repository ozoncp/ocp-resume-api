// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package ocp_resume_api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// OcpResumeApiClient is the client API for OcpResumeApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type OcpResumeApiClient interface {
	CreateResumeV1(ctx context.Context, in *CreateResumeV1Request, opts ...grpc.CallOption) (*CreateResumeV1Response, error)
	DescribeResumeV1(ctx context.Context, in *DescribeResumeV1Request, opts ...grpc.CallOption) (*DescribeResumeV1Response, error)
	ListResumeV1(ctx context.Context, in *ListResumesV1Request, opts ...grpc.CallOption) (*ListResumesV1Response, error)
	RemoveResumeV1(ctx context.Context, in *RemoveResumeV1Request, opts ...grpc.CallOption) (*RemoveResumeV1Response, error)
}

type ocpResumeApiClient struct {
	cc grpc.ClientConnInterface
}

func NewOcpResumeApiClient(cc grpc.ClientConnInterface) OcpResumeApiClient {
	return &ocpResumeApiClient{cc}
}

func (c *ocpResumeApiClient) CreateResumeV1(ctx context.Context, in *CreateResumeV1Request, opts ...grpc.CallOption) (*CreateResumeV1Response, error) {
	out := new(CreateResumeV1Response)
	err := c.cc.Invoke(ctx, "/ocp.resume.api.OcpResumeApi/CreateResumeV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ocpResumeApiClient) DescribeResumeV1(ctx context.Context, in *DescribeResumeV1Request, opts ...grpc.CallOption) (*DescribeResumeV1Response, error) {
	out := new(DescribeResumeV1Response)
	err := c.cc.Invoke(ctx, "/ocp.resume.api.OcpResumeApi/DescribeResumeV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ocpResumeApiClient) ListResumeV1(ctx context.Context, in *ListResumesV1Request, opts ...grpc.CallOption) (*ListResumesV1Response, error) {
	out := new(ListResumesV1Response)
	err := c.cc.Invoke(ctx, "/ocp.resume.api.OcpResumeApi/ListResumeV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ocpResumeApiClient) RemoveResumeV1(ctx context.Context, in *RemoveResumeV1Request, opts ...grpc.CallOption) (*RemoveResumeV1Response, error) {
	out := new(RemoveResumeV1Response)
	err := c.cc.Invoke(ctx, "/ocp.resume.api.OcpResumeApi/RemoveResumeV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OcpResumeApiServer is the server API for OcpResumeApi service.
// All implementations must embed UnimplementedOcpResumeApiServer
// for forward compatibility
type OcpResumeApiServer interface {
	CreateResumeV1(context.Context, *CreateResumeV1Request) (*CreateResumeV1Response, error)
	DescribeResumeV1(context.Context, *DescribeResumeV1Request) (*DescribeResumeV1Response, error)
	ListResumeV1(context.Context, *ListResumesV1Request) (*ListResumesV1Response, error)
	RemoveResumeV1(context.Context, *RemoveResumeV1Request) (*RemoveResumeV1Response, error)
	mustEmbedUnimplementedOcpResumeApiServer()
}

// UnimplementedOcpResumeApiServer must be embedded to have forward compatible implementations.
type UnimplementedOcpResumeApiServer struct {
}

func (UnimplementedOcpResumeApiServer) CreateResumeV1(context.Context, *CreateResumeV1Request) (*CreateResumeV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateResumeV1 not implemented")
}
func (UnimplementedOcpResumeApiServer) DescribeResumeV1(context.Context, *DescribeResumeV1Request) (*DescribeResumeV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DescribeResumeV1 not implemented")
}
func (UnimplementedOcpResumeApiServer) ListResumeV1(context.Context, *ListResumesV1Request) (*ListResumesV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListResumeV1 not implemented")
}
func (UnimplementedOcpResumeApiServer) RemoveResumeV1(context.Context, *RemoveResumeV1Request) (*RemoveResumeV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveResumeV1 not implemented")
}
func (UnimplementedOcpResumeApiServer) mustEmbedUnimplementedOcpResumeApiServer() {}

// UnsafeOcpResumeApiServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to OcpResumeApiServer will
// result in compilation errors.
type UnsafeOcpResumeApiServer interface {
	mustEmbedUnimplementedOcpResumeApiServer()
}

func RegisterOcpResumeApiServer(s grpc.ServiceRegistrar, srv OcpResumeApiServer) {
	s.RegisterService(&OcpResumeApi_ServiceDesc, srv)
}

func _OcpResumeApi_CreateResumeV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateResumeV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OcpResumeApiServer).CreateResumeV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ocp.resume.api.OcpResumeApi/CreateResumeV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OcpResumeApiServer).CreateResumeV1(ctx, req.(*CreateResumeV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _OcpResumeApi_DescribeResumeV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeResumeV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OcpResumeApiServer).DescribeResumeV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ocp.resume.api.OcpResumeApi/DescribeResumeV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OcpResumeApiServer).DescribeResumeV1(ctx, req.(*DescribeResumeV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _OcpResumeApi_ListResumeV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListResumesV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OcpResumeApiServer).ListResumeV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ocp.resume.api.OcpResumeApi/ListResumeV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OcpResumeApiServer).ListResumeV1(ctx, req.(*ListResumesV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _OcpResumeApi_RemoveResumeV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveResumeV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OcpResumeApiServer).RemoveResumeV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ocp.resume.api.OcpResumeApi/RemoveResumeV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OcpResumeApiServer).RemoveResumeV1(ctx, req.(*RemoveResumeV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

// OcpResumeApi_ServiceDesc is the grpc.ServiceDesc for OcpResumeApi service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var OcpResumeApi_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ocp.resume.api.OcpResumeApi",
	HandlerType: (*OcpResumeApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateResumeV1",
			Handler:    _OcpResumeApi_CreateResumeV1_Handler,
		},
		{
			MethodName: "DescribeResumeV1",
			Handler:    _OcpResumeApi_DescribeResumeV1_Handler,
		},
		{
			MethodName: "ListResumeV1",
			Handler:    _OcpResumeApi_ListResumeV1_Handler,
		},
		{
			MethodName: "RemoveResumeV1",
			Handler:    _OcpResumeApi_RemoveResumeV1_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/ocp-resume-api/ocp-resume-api.proto",
}
